KDU_GLIBS =
# KDU_GLIBS += -static -static-libgcc # This option is for static builds, but
         # might be problematic on the MAC; use xcode for exotic configurations

CC = g++

INCLUDES = -I../common
C_OPT = -O3 -DNDEBUG -Wall -Wno-uninitialized $(KDU_GLIBS)
C_OPT += -fPIC  # You can remove this if it causes problems, at least for static builds
#C_OPT += -DKDU_ALTIVEC_GCC -faltivec -mtune=G4  # Use this for a G4 build
C_OPT += -DKDU_ALTIVEC_GCC -faltivec -fast -fPIC  # Use this only for a G5 build
#C_OPT += -DKDU_CUSTOM_TEXT   # See "Internationalization" in "Compilation_Instructions.txt"
#C_OPT += -DKDU_NO_THREADS    # Comment out if you don't want multi-threading
CFLAGS = $(INCLUDES) $(C_OPT)

BIN_DIR = ../../bin/Mac-PPC-gcc
LIB_DIR = ../../lib/Mac-PPC-gcc

#all :: libkdu.a libkdu_v72R.so
all :: libkdu.a libkdu_v72R.so

clean:
	rm -f *.o *.so *.a

libkdu.a :: block_coding_common.o block_decoder.o block_encoder.o decoder.o encoder.o mq_decoder.o mq_encoder.o blocks.o codestream.o compressed.o kernels.o messaging.o params.o colour.o analysis.o synthesis.o multi_transform.o roi.o kdu_arch.o kdu_threads.o
	ar -rv $(LIB_DIR)/libkdu.a *.o
	ranlib $(LIB_DIR)/libkdu.a

libkdu_v72R.so :: block_coding_common.o block_decoder.o block_encoder.o decoder.o encoder.o mq_decoder.o mq_encoder.o blocks.o codestream.o compressed.o kernels.o messaging.o params.o colour.o analysis.o synthesis.o multi_transform.o roi.o kdu_arch.o kdu_threads.o
	$(CC) $(CFLAGS) -dynamiclib -o $(LIB_DIR)/libkdu_v72R.so *.o

kdu_arch.o :: ../common/kdu_arch.cpp
	$(CC) $(CFLAGS) -c ../common/kdu_arch.cpp \
	      -o kdu_arch.o

kdu_threads.o :: ../threads/kdu_threads.cpp
	$(CC) $(CFLAGS) -c ../threads/kdu_threads.cpp \
	      -o kdu_threads.o

mq_encoder.o :: ../coding/mq_encoder.cpp
	$(CC) $(CFLAGS) -c ../coding/mq_encoder.cpp \
	      -o mq_encoder.o
mq_decoder.o :: ../coding/mq_decoder.cpp
	$(CC) $(CFLAGS) -c ../coding/mq_decoder.cpp \
	      -o mq_decoder.o

block_coding_common.o :: ../coding/block_coding_common.cpp
	$(CC) $(CFLAGS) -c ../coding/block_coding_common.cpp \
	      -o block_coding_common.o
block_encoder.o :: ../coding/block_encoder.cpp
	$(CC) $(CFLAGS) -c ../coding/block_encoder.cpp \
	      -o block_encoder.o
block_decoder.o :: ../coding/block_decoder.cpp
	$(CC) $(CFLAGS) -c ../coding/block_decoder.cpp \
	      -o block_decoder.o

encoder.o :: ../coding/encoder.cpp
	$(CC) $(CFLAGS) -c ../coding/encoder.cpp \
	      -o encoder.o
decoder.o :: ../coding/decoder.cpp
	$(CC) $(CFLAGS) -c ../coding/decoder.cpp \
	      -o decoder.o

codestream.o :: ../compressed/codestream.cpp
	$(CC) $(CFLAGS) -c ../compressed/codestream.cpp \
	      -o codestream.o
compressed.o :: ../compressed/compressed.cpp
	$(CC) $(CFLAGS) -c ../compressed/compressed.cpp \
	      -o compressed.o
blocks.o :: ../compressed/blocks.cpp
	$(CC) $(CFLAGS) -c ../compressed/blocks.cpp \
	      -o blocks.o

kernels.o :: ../kernels/kernels.cpp
	$(CC) $(CFLAGS) -c ../kernels/kernels.cpp \
	      -o kernels.o

messaging.o :: ../messaging/messaging.cpp
	$(CC) $(CFLAGS) -c ../messaging/messaging.cpp \
	      -o messaging.o

params.o :: ../parameters/params.cpp
	$(CC) $(CFLAGS) -c ../parameters/params.cpp \

colour.o :: ../transform/colour.cpp ../transform/gcc_colour_altivec_local.h
	$(CC) $(CFLAGS) -c ../transform/colour.cpp \
	      -o colour.o
analysis.o :: ../transform/analysis.cpp ../transform/gcc_dwt_altivec_local.h
	$(CC) $(CFLAGS) -c ../transform/analysis.cpp \
	      -o analysis.o
synthesis.o :: ../transform/synthesis.cpp ../transform/gcc_dwt_altivec_local.h
	$(CC) $(CFLAGS) -c ../transform/synthesis.cpp \
	      -o synthesis.o
multi_transform.o :: ../transform/multi_transform.cpp ../transform/gcc_dwt_altivec_local.h
	$(CC) $(CFLAGS) -c ../transform/multi_transform.cpp \
	      -o multi_transform.o

roi.o :: ../roi/roi.cpp
	$(CC) $(CFLAGS) -c ../roi/roi.cpp \
	      -o roi.o



