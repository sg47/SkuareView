// -----------------------------------------------------------------
// This file is automatically generated by "kdu_text_extractor"
// Do not edit the file directly.  You may, however, use this file
// as a template for alternate versions in which the text strings
// are translated into different languages.
// -----------------------------------------------------------------
#include <kdu_messaging.h>

struct kdl_message_info{
  const char *context;
  kdu_uint32 id;
  const char *lead_in;
  const char *text;
};

static bool
  kdl_register_text(kdl_message_info *info, int num_records)
{
  for (; num_records > 0; num_records--, info++)
    kdu_customize_text(info->context,info->id,
                       info->lead_in,info->text);
  return true;
}

static kdl_message_info data[19] = {
  {
    "E(args.cpp)", 0,
    "Argument Processing Error:\n",
    "The\0"
    "argument must be followed by a file name from which to read arguments.\0"
  },
  {
    "E(args.cpp)", 1,
    "Argument Processing Error:\n",
    "Unable to open the argument switch file\0"
  },
  {
    "E(kdu_file_io.h)", 0,
    "Error in Kakadu File Format Support:\n",
    "Unable to open compressed data file\0"
  },
  {
    "E(kdu_file_io.h)", 1,
    "Error in Kakadu File Format Support:\n",
    "Unable to open compressed data file\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 0,
    "Error in Kakadu Region Compositor:\n",
    "Complex opacity representation for compositing layer (index, starting from 0, equals \0"
    ") cannot be implemented without the inclusion of multiple distinct alpha blending channels.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 1,
    "Error in Kakadu Region Compositor:\n",
    "Unable to find any colour description which can be used by the present implementation to render compositing layer (index, starting from 0, equals \0"
    ") to sRGB.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 3,
    "Error in Kakadu Region Compositor:\n",
    "Unable to find any colour description which can be used by the present implementation to render MJ2 track (index, starting from 0, equals \0"
    ") to sRGB.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 4,
    "Error in Kakadu Region Compositor:\n",
    "Unable to create compositing layer (index, starting from 0, equals \0"
    "), since its primary codestream cannot be opened.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 7,
    "Error in Kakadu Region Compositor:\n",
    "Unable to create imagery layer for MJ2 track (index starting from 1) \0"
    ": codestream cannot be opened.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 637734913,
    "Error in Kakadu Region Compositor:\n",
    "Unable to create imagery layer for direct rendering of image components from codestream (index starting from 0) \0"
    ": codestream cannot be opened.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 0,
    "Error in Kakadu Region Decompressor:\n",
    "JP2 object supplied to `kdu_channel_mapping::configure' has no colour channels!\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 1,
    "Error in Kakadu Region Decompressor:\n",
    "Cannot perform colour conversion from the colour description embedded in a JP2 (or JP2-compatible) data source, to the sRGB colour space.  This should not happen with truly JP2-compatible descriptions.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 3,
    "Error in Kakadu Region Decompressor:\n",
    "The `kdu_channel_mapping' object supplied to `kdu_region_decompressor::start' does not define any channels at all.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 4,
    "Error in Kakadu Region Decompressor:\n",
    "The `kdu_channel_mapping' object supplied to `kdu_region_decompressor::start' specifies more colour channels than the total number of channels.\0"
  },
  {
    "E(kdu_video_io.h)", 0,
    "Error in Kakadu File Format Support:\n",
    "Unable to open compressed data file\0"
  },
  {
    "E(kdu_video_io.h)", 1,
    "Error in Kakadu File Format Support:\n",
    "Input file\0"
    "does not appear to have a valid format.\0"
  },
  {
    "E(kdu_video_io.h)", 2,
    "Error in Kakadu File Format Support:\n",
    "Unable to open compressed data file\0"
  },
  {
    "W(kdu_region_compositor.cpp)", 0,
    "Warning in Kakadu Region Compositor:\n",
    "Unable to render compositing layer (index, starting from 0, equals \0"
    ") with alpha blending, since there are multiple distinct alpha channels for a single set of colour channels.\0"
  },
  {
    "W(kdu_region_compositor.cpp)", 1,
    "Warning in Kakadu Region Compositor:\n",
    "Unable to render compositing layer (index, starting from 0, equals \0"
    ") with alpha blending, since the codestream containing the alpha data cannot be opened.\0"
  }
};

static bool dummy_val = kdl_register_text(data,19);

#ifndef KDU_EXCLUDE_DEVELOPER_TEXT

static kdl_message_info dev_data[33] = {
  {
    "E(kdu_cache.cpp)", 0,
    "Error in Kakadu JPIP Cache:\n",
    "Attempting to invoke `kdu_cache::set_tileheader_scope' without first calling `kdu_cache::set_read_scope' to identify the code-stream which is being accessed.\0"
  },
  {
    "E(kdu_cache.cpp)", 1,
    "Error in Kakadu JPIP Cache:\n",
    "Attempting to invoke `kdu_cache::set_precinct_scope' without first calling `kdu_cache::set_read_scope' to identify the code-stream which is being accessed.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 2,
    "Error in Kakadu Region Compositor:\n",
    "Invalid field index passed to `kdrc_stream::init' when initializing the codestream management for a Motion JPEG2000 track.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 5,
    "Error in Kakadu Region Compositor:\n",
    "Unable to create imagery layer for MJ2 track (index starting from 1) \0"
    ": requested frame index is out of range.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 6,
    "Error in Kakadu Region Compositor:\n",
    "Unable to create imagery layer for MJ2 track (index starting from 1) \0"
    ": requested field does not exist (source is progressive, not interlaced).\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 8,
    "Error in Kakadu Region Compositor:\n",
    "Requested frame index for MJ2 track (index starting from 1) \0"
    " is out of range.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 9,
    "Error in Kakadu Region Compositor:\n",
    "Invalid `layer_src' argument supplied to `kdu_region_compositor::add_ilayer'.  Must be 0 for raw raw codestream data sources.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 10,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to use a non-existent JPX compositing layer in call to `kdu_region_compositor::add_ilayer'.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 11,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to add a non-existent or non-video Motion JPEG2000 track via `kdu_region_compositor::add_ilayer'.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 12,
    "Error in Kakadu Region Compositor:\n",
    "The `ilayer_ref' instance supplied to `kdu_region_compositor::change_ilayer_frame', does not correspond to any currently active imagery layer.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 13,
    "Error in Kakadu Region Compositor:\n",
    "Invoking `kdu_region_compositor::set_frame' on an object whose data source does not offer any composition or animation instructions!\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 14,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to invoke `set_frame' with a `jpx_frame_expander' object whose `construct' function did not return true when you invoked it.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 15,
    "Error in Kakadu Region Compositor:\n",
    "Invalid codestream index passed to `kdu_region_compositor::add_primitive_ilayer'.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 16,
    "Error in Kakadu Region Compositor:\n",
    "Invalid codestream index passed to `kdu_region_compositor::add_primitive_ilayer'.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 17,
    "Error in Kakadu Region Compositor:\n",
    "Invalid codestream index passed to `kdu_region_compositor::add_primitive_ilayer'.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 20,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to open a codestream which has already been found to contain an error.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 67372289,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to invoke `kdu_region_compositor::create' on an object which has already been created.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 67372290,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to invoke `kdu_region_compositor::create' on an object which has already been created.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 67372291,
    "Error in Kakadu Region Compositor:\n",
    "Attempting to invoke `kdu_region_compositor::create' on an object which has already been created.\0"
  },
  {
    "E(kdu_region_compositor.cpp)", 151130113,
    "Error in Kakadu Region Compositor:\n",
    "The `kdu_region_comositor::add_ilayer' function cannot be used without first installing a data source.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 2,
    "Error in Kakadu Region Decompressor:\n",
    "The `kdu_region_decompressor::get_rendered_image_dims' function should not be called with a `codestream' argument between calls to `kdu_region_decompressor::start' and `kdu_region_decompressor::finish'.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 5,
    "Error in Kakadu Region Decompressor:\n",
    "Invalid expansion ratio supplied to `kdu_region_decompressor::start'.  The numerator and denominator terms expressed by the `expand_numerator' and `expand_denominator' arguments must be strictly positive.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 7,
    "Error in Kakadu Region Decompressor:\n",
    "Unable to represent all component expansion factors as rational numbers whose numerator and denominator can both be expressed as 32-bit signed integers.  This is a very unusual condition.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 9,
    "Error in Kakadu Region Decompressor:\n",
    "The `region' passed into `kdu_region_decompressor::start' does not lie fully within the region occupied by the full image on the rendering canvas.  The error is probably connected with a misunderstanding of the way in which codestream dimensions are mapped to rendering coordinates through the rational upsampling process offered by the `kdu_region_decompressor' object.  It is best to use `kdu_region_decompressor::get_rendered_image_dims' to find the full image dimensions on the rendering canvas.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 13,
    "Error in Kakadu Region Decompressor:\n",
    "Channel buffers supplied to `kdr_region_decompressor::process' are too small to accommodate even a single line of the new region to be decompressed.  You should be careful to ensure that the buffers are at least as large as the width indicated by the `incomplete_region' argument passed to the `process' function.  Also, be sure to identify the buffer sizes correctly through the `max_region_pixels' argument supplied to that function.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 268502785,
    "Error in Kakadu Region Decompressor:\n",
    "Attempting to call `kdu_region_decompressor::start' without first invoking the `kdu_region_decompressor::finish' to finish a previously installed region.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 302384640,
    "Error in Kakadu Region Decompressor:\n",
    "The convenient, packed 32-bit integer version of `kdu_region_decompressor::process' may not be used if the number of colour channels equals 2.\0"
  },
  {
    "E(kdu_region_decompressor.cpp)", 352913665,
    "Error in Kakadu Region Decompressor:\n",
    "The `expand_numerator' and `expand_denominator' parameters supplied to `kdu_region_decompressor::start' represent a truly massive reduction in resolution through subsampling (on the order of many millions).  Apart from being quite impractical, such large subsampling factors violate internal implementation requirements.\0"
  },
  {
    "E(kdu_stripe_compressor.cpp)", 1,
    "Error in Kakadu Stripe Compressor:\n",
    "You may not call `kdu_stripe_compressor's `get_recommended_stripe_heights' function without first calling the `start' function.\0"
  },
  {
    "E(kdu_stripe_compressor.cpp)", 2,
    "Error in Kakadu Stripe Compressor:\n",
    "Inappropriate use of the `kdu_stripe_compressor' object.  Image component samples must not be pushed into this object in such disproportionate fashion as to require the object to maintain multiple rows of open tile pointers!  See description of the `kdu_stripe_compressor::push_line' interface function for more details on how to use it correctly.\0"
  },
  {
    "E(kdu_stripe_compressor.cpp)", 101254400,
    "Error in Kakadu Stripe Compressor:\n",
    "The optional `num_components' argument supplied to `kdu_stripe_compressor::start' may not exceed the number of output components declared by the codestream header.\0"
  },
  {
    "E(kdu_stripe_decompressor.cpp)", 1,
    "Error in Kakadu Stripe Decompressor:\n",
    "You may not call `kdu_stripe_decompressor's `get_recommended_stripe_heights' function without first calling the `start' function.\0"
  },
  {
    "E(kdu_stripe_decompressor.cpp)", 2,
    "Error in Kakadu Stripe Decompressor:\n",
    "Inappropriate use of `kdu_stripe_decompressor' object.  Image component samples must not be processed by this object in such disproportionate fashion as to require the object to maintain multiple rows of open tile pointers!  See description of the `kdu_stripe_decompressor::pull_line' interface function for more details on how to use it correctly.\0"
  }
};

static bool dev_dummy_val = kdl_register_text(dev_data,33);

#endif // !KDU_EXCLUDE_DEVELOPER_TEXT
